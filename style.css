
/* <font-family> é usado para definir a fonte do texto dentro do elemento selecionado. 
<font-size> é usado para definir o tamanho da fonte do texto dentro do elemento selecionado. Exemplo: 3em, 2em, 1.5em, 1em, 0.75em, 0.5em, 0.25em.
<color> é usado para definir a cor do texto dentro do elemento selecionado.
<text-align> é usado para definir o alinhamento do texto dentro do elemento selecionado. center = centralizado, left = alinhadoà esquerda, right = alinhado à direta, justify = justificado.<background-color> = usado para definir a cor de fundo do elemento selecionado.*/

h1 {
    color: rgb(40, 62, 62);
    text-align: center;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-size: 3em;
}

h2 {
    color: darkslategrey;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    text-align: center;
}


p {
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    font-size: medium;
    color: black;
}

body {
    background-color: antiquewhite;
}

/*usamos a # para referenciar o id*/
#paragrafo-footer {
    text-align: center;
}


/*usamos o . para referenciar a classe. Neste caso, a classe é paragrafo-section. A classe é usada para agrupar elementos que compartilham o mesmo estilo dentro de uma seção específica*/

.paragrafo-section {
    color: darkslategrey;
}

/*O exemplo abaixo é usado para estilizar os títulos/textos dentro de uma seção específica. Neste caso, a seção é identificada pela tag <section> e o elementro dentro dela que queremos estilizar que é o <h2>, que é o título da seção.*/

article h2 {
    color: forestgreen;
}


/*O efeito cascata é quando um estilo é aplicado a um elemento e, se não houver outro estilo mais específico, o estilo geral será aplicado. Neste caso, o estilo geral é aplicado ao elemento <body> e o estilo especifico é aplicado ao elemento <h1>. O estilo específico do <h1> terá prioridade sobre o estilo geral do <body> para o texto dentro do <h1>. Portanto, o texto dentro do <h1> será exibido com a cor ou fonte definida no estilo do <h1>, enquanto o restante do texto dentro do <body> seguirá o estilo geral que foi definido anteriorment. Isso demonstra o conceito de cascata no CSS, onde estilos mais específicos podem sobrepor estilos mais gerais. */

/*Estilo geral para o corpo do documento/página, definindo a cor de fundo e a fonte padrão. Toda alteração dentro do <body> será afetada por este estilo*/

body {
    background-color: antiquewhite;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

/*Estilo para o cabeçalho. O cabeçalho é uma seção do documento que geralmente contém título ou informações importantes. 
<text-transform: uppercase;> é usado para transformar o texto dentro do cabeçalho em letras maiúsculas, tornando-o mais destacado.

<text-tranform: capitalize;> é usado para transformar a primeira letra de cada palavra em maíuscula, o que útil para títulos ou nomes própios.

<text-tranform: lowercase;> é usado para transformar todo o texto em letras minúsculas, o que pode ser útil para manter a consistência visual em alguns casos.

<text-tranform: none;> é usado para remover qualquer transformação de texto aplicada anteriormente, mantendo o texto em seu formato original.

<text-tranform: initial;> é usado para restaurar o texto ao seu estado original, sem nenhuma tranformação aplicada. Isso é útil quando você deseja reverter qualquer transformação de texto aplicada anteriormente.

<text-tranform: uppercase;> é usado para transformar todo o texto em letras maiúsculas, o que pode ser útil para títulos ou informações importantes que precisam se destacar visualmente.

<text-tranform:> pode ser usado em conjunto com outras propiedades de estilo, como cor, tamanho da fonte e alinhamento para criar um efeito visual mais impactante no cabeçalho do documento.*/

header{
    background-color:darkslategray;
}


header h1 {
    text-transform: uppercase;
}


main{
    background-color:rgb(247, 247, 247);
}

/* <main section> e <main section p> são seletores compostos que aplicam estilos específicos aos elementos <section> e <p> dentro do elemento <main>. Isso permite um controle mais específico sobre a aparência desses elementos dentro do contexto do <main>. Quando usamos seletores compostos, estamos dizendo ao navegador para aplicar os estilos apenas aos elementos que estão dentro do contexto do elemento "pai" especificado. Isso é útil para evitar conflitos de estilos com outros elementos na página que podem ter estilos diferentes. O efeito cascata também se aplica aqui, onde estilos mais específicos (como os aplicados a <main section p>) terão prioridade sobre estilos mais gerais (como os aplicados a <p> fora do contexto do <main>).*/
main section p{
    text-align: center;
}

/* a ordem dos seletores importa. Mas este exemplo foi criado apenas para ilustrar o conceito de cascata. Na prática, é melhor evitar a repetição desnecessária de seletores para manter o código mais limpo e eficiente. A ordem importa pois o CSS é lido de cima para baixo, então o último estilo aplicado terá prioridade sobre os anteriores. Se houver estilos conflitantes, o estilo mais específico ou o último na ordem de leitura será aplicado. Na prática, comece estilizando os mais gerais e vá refinando com estilos mais específicos conforme o necessário. Isso ajuda a evitar conflitos e torna o código mais fácil de entender e manter.

Conteúdo apenas para estudo e revisão.*/


